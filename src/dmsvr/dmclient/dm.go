// Code generated by goctl. DO NOT EDIT!
// Source: dmsvr.proto

//go:generate mockgen -destination ./dm_mock.go -package dmclient -source $GOFILE

package dmclient

import (
	"context"

	"yl/src/dmsvr/dm"

	"github.com/tal-tech/go-zero/zrpc"
)

type (
	Request  = dm.Request
	Response = dm.Response

	Dm interface {
		Ping(ctx context.Context, in *Request) (*Response, error)
	}

	defaultDm struct {
		cli zrpc.Client
	}
)

func NewDm(cli zrpc.Client) Dm {
	return &defaultDm{
		cli: cli,
	}
}

func (m *defaultDm) Ping(ctx context.Context, in *Request) (*Response, error) {
	client := dm.NewDmClient(m.cli.Conn())
	return client.Ping(ctx, in)
}
